# ===============================================
# JesusFromNorth Clinic System - Environment Variables
# ===============================================
#
# This file serves as a template for setting up required environment variables.
# Copy this file to a new file named ".env" and fill in the appropriate values.
# NEVER commit your actual .env file to version control.
#
# For different environments:
# 1. Development: Use default values or lightweight configuration
# 2. Testing: Use separate database and testing-specific values
# 3. Production: Use strong secrets, production database credentials, and proper domains
#
# How to use:
# - Windows: Use "set VARIABLE_NAME=value" or set through System Properties
# - Linux/Mac: Use "export VARIABLE_NAME=value" or add to ~/.bashrc or ~/.zshrc
# - Docker: Use environment section in docker-compose.yml
# - Spring Boot: These values are loaded through application.properties
#
# ===============================================

# =============
# Application
# =============
# Port for the application to run on (default: 8080)
PORT=8080

# =============
# Database Configuration
# =============
# Database connection URL (SENSITIVE!)
DB_URL=jdbc:mysql://localhost:3306/system_clinic

# Database username (SENSITIVE!)
DB_USERNAME=root

# Database password (SENSITIVE!)
# In production, use a strong, unique password
DB_PASSWORD=root

# =============
# JWT Security
# =============
# Secret key for signing JWT tokens (HIGHLY SENSITIVE!)
# In production, use a strong, randomly generated key (at least 256 bits / 32 characters)
# You can generate one at: https://www.allkeysgenerator.com/Random/Security-Encryption-Key-Generator.aspx
JWT_SECRET=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

# JWT Access token expiration time in milliseconds
# Default: 86400000 (24 hours)
JWT_EXPIRATION=86400000

# JWT Refresh token expiration time in milliseconds
# Default: 604800000 (7 days)
JWT_REFRESH_EXPIRATION=604800000

# =============
# CORS Configuration
# =============
# Allowed origins for CORS (comma-separated for multiple origins)
# In production, set to your actual frontend domain
CORS_ALLOWED_ORIGINS=http://localhost:3000

# =============
# Logging Levels
# =============
# Available levels: TRACE, DEBUG, INFO, WARN, ERROR
LOG_LEVEL_APP=DEBUG
LOG_LEVEL_SPRING=INFO
LOG_LEVEL_HIBERNATE=INFO

# =============
# SSL/TLS Configuration (for production)
# =============
# Whether to enable HTTPS
# ENABLE_HTTPS=true

# Path to SSL certificate
# SSL_CERTIFICATE_PATH=/path/to/certificate.crt

# Path to SSL key (SENSITIVE!)
# SSL_KEY_PATH=/path/to/private.key

# =============
# Additional Notes
# =============
# 1. Security-sensitive variables (marked as SENSITIVE above) should:
#    - Never be committed to source control
#    - Use different values across environments
#    - Be restricted in access to necessary personnel only
#    - Be rotated periodically in production environments
#
# 2. In production environments, consider using:
#    - Environment variable management services
#    - Secret management solutions like HashiCorp Vault or AWS Secrets Manager
#    - Encryption for sensitive values
#
# 3. For Kubernetes deployment, use Secrets for sensitive values

